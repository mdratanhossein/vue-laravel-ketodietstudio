version: '3'
services:
    nginx:
        image: ${REGISTRY}/${PROJECT}/nginx
        build:
            context: .
            dockerfile: .docker/dockerfile-nginx
        container_name: ${PROJECT}-nginx
        environment:
            - VIRTUAL_HOST=${PROJECT}.local
            - TZ=${APP_TIMEZONE}
        command: /bin/sh -c "chown -R 1000:1000 /app && envsubst '$$VIRTUAL_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: unless-stopped
        depends_on:
            - php
            - mysql
        links:
            - php
    php:
        container_name: ${PROJECT}-php
        image: ${REGISTRY}/${PROJECT}/php
        working_dir: '/app'
        build:
            context: .
            dockerfile: .docker/dockerfile-php
            args:
                - PHP_VERSION=${PHP_VERSION}
                - APP_ENV=${APP_ENV}
        restart: unless-stopped
        command: /bin/sh -c "crontab -u www-data /usr/crontab && /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf"
        env_file: .env
        environment:
            TZ: ${APP_TIMEZONE}
            DB_CONNECTION: mysql
            DB_HOST: ${DB_HOST}
            DB_PORT: 3306
            DB_DATABASE: ${DB_DATABASE}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_USERNAME: ${DB_USERNAME}
        depends_on:
            - mysql
        links:
            - mysql
    mysql:
        image: mysql:5.7
        container_name: ${PROJECT}-mysql
        restart: unless-stopped
        command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--innodb_use_native_aio=0']
        environment:
            - TZ=${APP_TIMEZONE}
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
    node:
        build:
            context: .
            dockerfile: .docker/dockerfile-node
        container_name: ${PROJECT}-node